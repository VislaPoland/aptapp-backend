group = 'aptapp-backend'
version = '1.0.0-SNAPSHOT'

buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE')
	}
}
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
//    1. Go to Settings -> Build, Execution, Deployment -> Compiler -> Annotation Processors;
//    2. Check Enable annotation processing checkbox;
//    3. In "Store generated sources relative to:" select Module content root.
	module {
		sourceDirs += file('src/main/generated')
		generatedSourceDirs += file('src/main/generated')
	}
}

repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/plugins-release' }
}

task createBuildVersionFile(type:Exec) {
	commandLine "$projectDir/createBuildVersion.sh"
}

war {
	webInf {
		from("$buildDir/tmp/") {
			include "version_number"
			into('classes/')
		}
	}
}

war.dependsOn createBuildVersionFile


dependencies {

	optional('org.springframework.boot:spring-boot-configuration-processor')

	// spring
	compile("org.springframework.boot:spring-boot-starter")
	compile('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude module: 'hibernate-entitymanager'
	}
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('org.springframework.boot:spring-boot-starter-mail')
	// orm
	compile('org.hibernate:hibernate-core:5.2.1.Final')
	compile('com.querydsl:querydsl-jpa:4.1.3')
	compile('com.querydsl:querydsl-apt:4.1.3:jpa')
	//validation
	compile('org.hibernate:hibernate-validator:5.2.4.Final')

	// other
	compile('org.projectlombok:lombok:1.16.18')
	compile('io.jsonwebtoken:jjwt:0.7.0')
	compile('com.bedatadriven:jackson-datatype-jts:2.4')
	compile('org.apache.commons:commons-lang3:3.6')
	compile('io.springfox:springfox-swagger2:2.5.0')
	compile('commons-io:commons-io:2.5')
	compile('ma.glasnost.orika:orika-core:1.5.1')
	compile('org.freemarker:freemarker:2.3.23')
	compile('com.twilio.sdk:twilio-java-sdk:7.0.0-rc-10')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0')
    compile('com.googlecode.json-simple:json-simple:1.1.1')
	compile('com.google.zxing:core:3.3.0')

	//	APNS
	compile('com.notnoop.apns:apns:1.0.0.Beta6')

	// Before upgrading swagger make sure the following ticket is resolved
	// https://github.com/springfox/springfox/issues/1804
	runtime('io.springfox:springfox-swagger-ui:2.5.0')
	runtime('org.postgresql:postgresql:42.1.4')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')

	// ensure that the embedded servlet container does not interfere with the servlet container
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}

compileJava.dependsOn(processResources)

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

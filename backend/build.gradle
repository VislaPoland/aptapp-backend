group = 'aptapp-backend'
version = '1.0.0'

buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
		querydslVersion = '4.2.1'
	}
	repositories {
		mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/plugins-release' }
		maven { url "https://plugins.gradle.org/m2/" }
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE')
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
	}
}
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'pmd'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

sourceCompatibility = 1.8
targetCompatibility = 1.8

pmd {
	ignoreFailures = true
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
			"java-basic",
			"java-braces",
			"java-clone",
			"java-codesize",
			"java-design",
			"java-finalizers",
			"java-logging-java",
			"java-migrating",
			"java-optimizations",
			"java-strictexception",
			"java-strings",
			"java-typeresolution",
			"java-unusedcode"
	]
	toolVersion = '5.8.1'
	sourceSets = [sourceSets.main]
}

repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/plugins-release' }
}

task createBuildVersionFile(type:Exec) {
	commandLine "$projectDir/createBuildVersion.sh"
}

war {
	webInf {
		from("$buildDir/tmp/") {
			include "version_number"
			into('classes/')
		}
	}
}

war.dependsOn createBuildVersionFile

dependencies {

	optional('org.springframework.boot:spring-boot-configuration-processor')

	// spring
	compile("org.springframework.boot:spring-boot-starter")
	compile('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude module: 'hibernate-entitymanager'
	}
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('org.springframework.boot:spring-boot-starter-mail')
	// orm
	compile('org.hibernate:hibernate-core:5.3.7.Final')
	compile group: 'com.querydsl', name: 'querydsl-core', version: querydslVersion
	compile group: 'com.querydsl', name: 'querydsl-jpa', version: querydslVersion
	compile group: 'com.querydsl', name: 'querydsl-sql', version: querydslVersion
	//validation
	compile('org.hibernate:hibernate-validator:5.3.6.Final')

	// other
	compile('org.projectlombok:lombok:1.16.18')
	compile('io.jsonwebtoken:jjwt:0.7.0')
	compile('com.bedatadriven:jackson-datatype-jts:2.4')
	compile('org.apache.commons:commons-lang3:3.6')
	compile('org.apache.commons:commons-text:1.1')
	compile('io.springfox:springfox-swagger2:2.5.0')
	compile('commons-io:commons-io:2.5')
	compile('ma.glasnost.orika:orika-core:1.5.2')
	compile('org.freemarker:freemarker:2.3.23')
	compile('com.twilio.sdk:twilio:7.15.5')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0')
    compile('com.googlecode.json-simple:json-simple:1.1.1')
	compile('com.google.zxing:core:3.3.0')
	compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'

	compile 'net.swisstech:bitly-api-client:+'

	//	APNS
	compile('com.notnoop.apns:apns:1.0.0.Beta6')

	// Before upgrading swagger make sure the following ticket is resolved
	// https://github.com/springfox/springfox/issues/1804
	runtime('io.springfox:springfox-swagger-ui:2.5.0')
	runtime('org.postgresql:postgresql:42.1.4')
	// Liquibase migrations
	runtime('org.liquibase:liquibase-core:3.5.3')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	
	testCompile('io.github.benas:random-beans:3.7.0')

	// ensure that the embedded servlet container does not interfere with the servlet container
	providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

	compile("org.springframework.boot:spring-boot-devtools")
}

compileJava.dependsOn(processResources)

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-sources/apt"
        }
    }
}

querydsl {
    jpa = true
    querydslSourcesDir = "$buildDir/generated-sources/apt"
}